/* Range/Opponent Sensor Test 
   Assumes GP2Y0A21YK0F / http://www.pololu/product/136
   This sensor outputs a "distance to object" analog 
   value. Therefor you'll need to connect it to one of 
   the arduino analog inputs. A1 is a good choice as it
   isn't being used in our sumo-bots.
   
   Hookup your sensor, black to ground, red to 5 volts,
   and white to A1(or other unused analog input). Compile
   and load this sketch into the arduino. Open the Serial
   Monitor window. Start with your hand or some other 
   object about 77cm away from the sensor. Slowly move
   toward the sensor observing the readings provided in
   the Serial Monitor window.

   Written by Dave Pelowitz, pelowitz@pelowitz.com
   You are free to use this example as you see fit.
   
   Created: 2013 Nov 8
   Modified: Not yet.
*/

//change to use the analog port your sensor is attached to
#define OPPONENT_SENSOR A1

//any reading greater than about 100 indicates we are 
//pointed at our opponent. You may want to set this to a 
//lower value to so as to detect more distance objects 
#define OPP_THRESHOLD  100

//we will light the builtin LED (on pin 13) if the object
//is closer than the OPP_THRESHOLD
#define LED 13

void setup() {
  // put your setup code here, to run once:
  
  //set up the sketch to be able to send readings back to
  //the computer. Viewable through the serial monitor window.
  Serial.begin(9600); 
  
  //make sure the led pin is an output
  pinMode(LED, OUTPUT);
  //and the led is off
  digitalWrite(LED,LOW);
  
}

void loop() {
  // put your main code here, to run repeatedly: 
  
  //read the sensor
  //the raw value will seem backwards--the closer something
  //is to the sensor the higher the value(voltage) it will
  //show. It ends up that anything closer than roughly half
  //of the 77cm sumobot arena will provide a value > about 100.
  unsigned int uiDistance = analogRead(OPPONENT_SENSOR);  
  
  //turn on or off the led
  //on if uiDistance is greater then the OPP_THRESHOLD
  //which means the object is close
  //Note that it would be very easy to modify this to test
  //for far, less far, medium, less near, and near by simply
  //adding more thresholds and more if then elses.
  if (uiDistance > OPP_THRESHOLD)
    digitalWrite(LED,HIGH);
  else
    digitalWrite(LED,LOW);
  
  //print out what we are reading. In the "competition" 
  //software you don't really want the arduino wasting time
  //printing values or wasting program memory.
  Serial.print("Raw Distance: ");
  
  //print out the actual raw value
  //note: this is a value between 0 and 1023 where
  //  0 represents 0 volts and 1023 represents 5.0 volts.
  //  to convert to distance see the graph at 
  //  http://www.pololu.com/product/136 about half way down the page.
  //  Realize that for the mini-sumobots you don't need to do
  //  any math on this value--you may use it in its raw form 
  //  to make decisions on how fast you want to move forward.
  Serial.println(uiDistance);
  
  //for the purposes of this test only read the value about
  //10 times per second. So wait here for 1/10 of a second.
  //The above actions each take time, so delaying 1/10 of a
  //second will cause the program to provide slightly fewer
  //then 10 per second.
  delay(100);
}
